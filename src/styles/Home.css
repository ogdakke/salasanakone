.header,
.header a {
  display: flex;
  gap: 1rem;
  align-items: center;
}


.code {
  letter-spacing: 0.1em;
  font-weight: 400;
  font-family: var(--font-mono);
}

.form {
  opacity: 0;
  animation: fadeIn 0.2s ease-in;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding-top: 2rem;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.2);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: calc(var(--border-radius) + 1rem);
  margin-bottom: 2rem;
  box-shadow: 0px 2px 8px -1px #0000001a;
}



/* || global reusable styles */
.flex-center {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.space-between {
  justify-content: space-between;
}

.interact {
  cursor: pointer;
}
@media (hover: hover) and (pointer: fine) {
  .hover:hover {
    opacity: 1;
  }
}



/*  */
.buttonWrapper {
  display: flex;
  justify-content: space-between;
}

.inputButton {
  /* font: var(--font-mono); */


  font-family: inherit;
  font-size: 1rem;
  font-weight: 600;
  max-width: -moz-fit-content;
  max-width: fit-content;
  padding: 1rem 1.5rem;
  margin-top: 1rem;
  background-color: rgba(var(--foreground-rgb), 0.9);
  color: rgba(var(--background-rgb));
  cursor: pointer;
  -webkit-user-select: none;
  user-select: none;
  border-radius: var(--border-radius);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);

  transition: all 200ms ease-out;
}

.inputButton:focus{
  outline: 2px solid rgb(var(--background-rgb));
  filter: invert(1);
}

/* button that has svg or .icon class */
.inputButton:has(svg, .icon) {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  padding-right: 1.25rem;
}



.buttonWrapper button[type=button] {
  background-color: rgba(180, 0,10, 1);
}





.LabelRoot {
  padding-left: 0.3rem;
}

.grid {
  display: grid;
  grid-template-columns: 1fr;
}

.resultHelperText {
  font-size: 0.875rem;
  opacity: 0.7;
}

.card {
  /* top right bottom left */
  padding: 1.5rem 1.2rem 1.5rem 1.2rem;
  position: relative;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px dashed rgba(var(--card-border-rgb), 0.2);
  transition: all 200ms, border 200ms;
  width: 100%;
  overflow-x: scroll;
  overflow-y: hidden;
  scroll-padding-right: 2.5rem;
  scroll-margin-right: 1rem;
}

.card:focus {
  background: rgba(var(--card-rgb), 0.1);
  border: 1px solid rgba(var(--card-border-rgb), 0.15);
}


.card h2 {
  color: rgba(var(--foreground-rgb), 0.6);
  font-weight: 500;
}

.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.875rem;
  line-height: 1.5;
  max-width: 30ch;
}


.resultWrapper {
  -webkit-user-select: none;
  user-select: none;
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.resultCard {
  position: relative;
  -webkit-user-select: none;
  user-select: none;
  cursor: pointer;
  /* display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 80% auto;
  justify-items: end;
  gap: 0.5rem;
  width: 100%; */
}


.inputWrapper {
  display: flex;
  gap: 0.25rem;
  align-items: center;
}

.checkboxRoot span {
  fill: rgba(var(--foreground-rgb), 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
}
.checkboxRoot {
  all: unset;
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);

  background-color: rgb(var(--callout-rgb));
  width: 25px;
  height: 25px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  /* box-shadow: 0 2px 10px rgba(var(--card-rgb), 0.3); */
}

.checkboxRoot:focus {
  box-shadow: 0px 0px 0px 2px rgba(var(--foreground-rgb), 0.8);
}

.checkboxIndicator {
  fill: rgb(var(--foreground-rgb));
  /* color: rgb(var(--foreground-rgb)); */
}


@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}




/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .resultCard:hover .card {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);

  }
  .card:hover h2 {
    color: rgba(var(--foreground-rgb), 0.9);
  }

  .inputButton:hover {
    transition: all 200ms ease-in;
    /* background-color: rgba(var(--foreground-rgb), .7); */
    filter: invert(1);
  }

  
  .inputButton:hover .spin {
    animation: spinAnimation 700ms ease-out;

  }

  @keyframes spinAnimation {
    0% {
      transform: rotate(0);
    }
    40% {
      transform: rotate(340deg);
    }
    
    60% {
      transform: rotate(380deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .buttonWrapper button[type=button]:hover {
    background-color: rgba(205, 0,1, 0.8);
  }

  .checkboxRoot:hover {
    background-color: rgbA(var(--callout-border-rgb), 0.3);
  }
  
  /* scrollbar  on firefox*/
  html,
  .card {
    scrollbar-width: thin;
    /* scrollbar-gutter: stable; */
    scrollbar-color: rgba(var(--foreground-rgb), 0.3) transparent;
  }

  /* this is because the scrollbar height is 9px */
  .card {
    padding: 1.5rem 1.2rem calc(1.5rem - 9px) 1.2rem;
  }
  
  /* edge, chrome, safari */
  .card::-webkit-scrollbar {
    height: 9px;  
  }
  .card::-webkit-scrollbar-thumb {
    background-color: rgba(var(--foreground-rgb), 0.3);
    border-radius: 9px;
  }
}

/* || firefox specific rules  */
@supports (-moz-appearance:none) {
  /* Because firefox does something weird with  the scrollbar*/
  .card {
    padding: 1.5rem 1.2rem 1.5rem 1.2rem;
  }
}

@supports not selector(:has(*)) {
  /* firefox or android do not support :has()  -- so need to override those */
  .inputButton {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
}

@media (prefers-reduced-motion) {
  .inputButton:hover .spin {
    animation: none;
  }
  .loading::before {
    animation: none;
  }

  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .resultWrapper {
    padding-top: 2rem;
    gap: 0.75rem;
  }

  .header {
    flex-direction: column;
    gap: 3rem;
    align-items: flex-start;
  }

  .inputWrapper input {
    font-size: 1.15rem;
  }
}
