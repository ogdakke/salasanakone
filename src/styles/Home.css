.main {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 4rem;
  padding-bottom: 2rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  width: 100vw;
  
}

.wrapper {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  width: clamp(300px, 90%, var(--max-width));
  max-width: var(--max-width);
}


.description {
  font-size: 1rem;
  max-width: var(--max-width);
  width: 100%;
}

.description h2 {
  margin-bottom: 0.5rem;
}

.description a {
  
  align-items: center;
  color: rgba(var(--foreground-rgb),0.7);
  text-decoration: underline dotted;
  padding: 0.5rem 0rem;
  padding-right: 1rem;
}



.description p {
  margin: 0;  
}

.imageWrapper {
  display: flex;
  width: min-content;
  align-items: center;
  gap: 0.5rem;
  margin: 0.5rem 0rem;

  
}


.svgImage{
  transition: filter 250ms;
  -webkit-filter: blur(3px);
  filter: blur(3px);
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
}



.header,
.header a {
  display: flex;
  gap: 1rem;
  align-items: center;
}


.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding-top: 2rem;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.2);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: calc(var(--border-radius) + 1rem);
  margin-bottom: 2rem;
}

.inputWrapper input {
  background-color: transparent;
  padding: 0.2rem 0.5rem;
  font-size: 1rem;
  border: 1px solid rgba(var(--foreground-rgb), 0.3);
  -webkit-border-radius: 12px;
  border-radius: var(--border-radius);
}

.inputWrapper input:focus {
  /* outline: 1px solid rgba(var(--foreground-rgb), 1); */
}

.inputWrapper input:invalid:focus {
  outline:1px solid red;
  border: 1px solid rgba(var(--error), 0.7);
}
.inputWrapper input:invalid{
  color: rgba(255, 0, 0, 0.5);
  border: 1px solid rgba(255,0,0, 0.7);
}

.inputWrapper input:required {
  border: 1px solid rgba(var(--error), 0.7);
}

.inputWrapper input:has(+ span)input {
    border: 1px solid rgba(255,0,0, 0.7);
}

.inputWrapper input[type=number] {
  -moz-appearance: textfield;
  -webkit-appearance: textfield;
    appearance: textfield;
    margin: 0;
}

.buttonWrapper {
  display: flex;
  justify-content: space-between;
}

.inputButton {
  font: var(--font-mono);
  max-width: -moz-fit-content;
  max-width: fit-content;
  padding: 1rem 1.75rem;
  margin-top: 1rem;
  color: var(--foreground-rgb);
  cursor: pointer;

  border-radius: var(--border-radius);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  background-color: rgba(var(--background-end-rgb), 1)
}

.buttonWrapper button[type=button] {
  background-color: rgba(180, 0,10, 1);
}



.inputWrapper {
  display: flex;
  gap: 0.25rem;
  align-items: center;
}


.inputWrapper span {
  color: rgba(255, 0, 0, 0.7);
  font-size: 0.8rem;
}

.LabelRoot {
  padding-left: 0.3rem;
}

.grid {
  display: grid;
  grid-template-columns: 1fr;
}

.card {
  /* top right bottom left */
  padding: 1.5rem 1.2rem 1.5rem 1.2rem;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px dashed rgba(var(--card-border-rgb), 0.2);
  transition: all 200ms, border 200ms;
  
  cursor: pointer;
  
  overflow-x: scroll;
  
}



.card span {
  padding-right: .6rem;
  transition: all 200ms, border 200ms;
  display: inline-block;
  color: rgba(var(--foreground-rgb), .7);
}

.card h2 {
  
  color: rgba(var(--foreground-rgb), 0.6);
  font-weight: 500;
}


.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
}

.containLoading {
  height: 461px;
  overflow: hidden;
  
}
.loading {
  margin-bottom: 2rem;
  border-radius: calc(var(--border-radius) + 1rem);
  position: relative;
  border: none;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 461px;
  overflow: hidden;
  transform: translateZ(0);
  box-shadow: 0px 2px 8px -1px #0000001a;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.loading::before,
.loading::after {
  content: '';
  position: absolute;
  z-index: -1;
}

/* Conic Gradient Animation */
.loading::before {
  animation: 2s rotate linear infinite;
  width: 200%;
  height: 200%;
  background: var(--tile-border);
}

/* Inner Square */
.loading::after {
  inset: 0;
  padding: 1px;
  border-radius: inherit;
  /* background: linear-gradient(
    to bottom right,
    rgba(var(--tile-start-rgb), 1),
    rgba(var(--tile-end-rgb), 1)
  ); */
  background: rgba(var(--background-end-rgb));
  -webkit-background-clip: content-box;
  background-clip: content-box;
}



.loader {
  width: 24px;
  height: 24px;
  border: 2px solid rgba(var(--foreground-rgb), 0.4);
  border-bottom-color: transparent;
  border-radius: 50%;
  display: inline-block;
  box-sizing: border-box;
  animation: rotate 2s linear infinite;
  }


.resultWrapper {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  cursor: pointer;  
}
.result {
  margin-top: 1rem;
  font-size: 0.85rem;
  opacity: 0.7;
}

.copied {
  pointer-events: none;
  transition: all 650ms;
  -webkit-user-select: none;
  user-select:none;
}

.copied span {
  transition: all 200ms ease-out;
  opacity: 0;
}

.notCopied {
  transition: all 650ms;
  opacity: 100%;
}

.notCopied span {
  opacity: 100%;
  word-break: keep-all;
  white-space: nowrap;
}









.sliderWrapper {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  /* justify-content: space-between; */
}


.sliderRoot {
  position: relative;
  display: flex;
  align-items: center;
  -webkit-user-select: none;
  user-select: none;
  touch-action: none;
  width: 50%;
  height: 40px;
}

.sliderTrack {
  background-color: rgba(var(--foreground-rgb), 0.3);
  position: relative;
  flex-grow: 1;
  border-radius: 9999px;
  height: 4px;
}

.sliderRange {
  position: absolute;
  background-color: rgba(var(--foreground-rgb), 0.7);
  border-radius: 9999px;
  height: 100%;
}

.sliderThumb {
  cursor: pointer;
  display: block;
  width: 25px;
  height: 25px;
  background-color: rgba(var(--foreground-rgb));
  box-shadow: 0 2px 8px rgba(var(--foreground-rgb), 0.4);
  border-radius: 9999px;
  transition: border 200ms ease-in;
}

.sliderThumb:focus {
  outline: none;
  border: 3px solid rgba(var(--callout-rgb));
  transition: border 200ms ease-in;
  /* box-shadow: 0 0 0 4px rgba(var(--callout-rgb)); */
}


.checkboxRoot span {
  fill: rgba(var(--foreground-rgb), 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
}
.checkboxRoot {
  all: unset;
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);

  background-color: rgb(var(--callout-rgb));
  width: 25px;
  height: 25px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 10px var(--card-rgb);
}

.checkboxRoot:focus {
  box-shadow: 0 0 0 4px rgb(var(--callout-rgb));
}

.checkboxIndicator {
  fill: rgb(var(--foreground-rgb));
  /* color: rgb(var(--foreground-rgb)); */
}

.submitted span {
  animation: alternate;
}


/* scrollbar */
.scrollAreaRoot {
  position: relative;
  border-radius: inherit;
  overflow: hidden;
}

.scrollAreaViewport {
  width: 100%;
  height: 100%;
  border-radius: inherit;
  text-overflow: clip;
}

.scrollAreaScrollbar {
  display: flex;
  /* ensures no selection */
  -webkit-user-select: none;
  user-select: none;
  /* disable browser handling of all panning and zooming gestures on touch devices */
  touch-action: none;
  padding: 20px;
  background: rgb(var(--foreground-rgb));
  transition: background 160ms ease-out;
}
.scrollAreaScrollbar:hover {
  background: var(--blackA8);
}
.scrollAreaScrollbar[data-orientation='vertical'] {
  width: var(--scrollbar-size);
}
.scrollAreaScrollbar[data-orientation='horizontal'] {
  flex-direction: column;
  height: var(--scrollbar-size);
}

.scrollAreaThumb {
  flex: 1;
  background: rgb(var(--foreground-rgb));
  border-radius: var(--scrollbar-size);
  position: relative;
}
/* increase target size for touch devices https://www.w3.org/WAI/WCAG21/Understanding/target-size.html */
.scrollAreaThumb::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  min-width: 44px;
  min-height: 44px;
}

.scrollAreaCorner {
  background: rgb(var(--foreground-rgb));
}






/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);

  }
  .card:hover h2 {
    color: rgba(var(--foreground-rgb), 0.9);
  }

  .description a:hover {
    color: rgba(var(--foreground-rgb), 0.9);
  
  }

  .inputButton:hover {
    background-color: rgba(var(--callout-rgb), 1);
  }

  .buttonWrapper button[type=button]:hover {
    background-color: rgba(205, 0,1, 0.8);
  }

  .checkboxRoot:hover {
    background-color: rgbA(var(--callout-border-rgb), 0.3);
  }

  .sliderThumb:hover {
    /* height: 27px;
    width: 27px; */
    border: 2px solid rgba(var(--callout-rgb));
    transition: border 150ms ease-out;
  }
  
  .imageWrapper:hover .svgImage {
    transition: filter 250ms;
    filter: blur(0);
  }

  /* use these only on pointer devices */
  
  
  /* scrollbar  on firefox*/
  html,
  .card {
    
    scrollbar-width: thin;
    /* scrollbar-gutter: stable; */
    scrollbar-color: rgba(var(--foreground-rgb), 0.3) transparent;
  }

  /* this is because the scrollbar height is 9px */
  .card {
    padding: 1.5rem 1.2rem calc(1.5rem - 9px) 1.2rem;
  }
  
  /* edge, chrome, safari */
  .card::-webkit-scrollbar {
    height: 9px;  
  }
  .card::-webkit-scrollbar-thumb {
    background-color: rgba(var(--foreground-rgb), 0.3);
    border-radius: 9px;
  }

  /*  */

}

@media (prefers-reduced-motion) {
  .loading::before {
    animation: none;
  }

  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .main {
    /* justify-content: left; */

    padding-top: 4rem;
    padding-left: 0rem;
    padding-right: 0rem;
    
  }

  .loading {
    height: 495px;
  }
  
  .resultWrapper {
    padding-top: 2rem;
    gap: 0.75rem;
  }

  .sliderRoot {
    width: 80%;
    height: 35px;
    margin: 0.5rem 0rem;
  }

  .header {
    flex-direction: column;
    gap: 3rem;
    align-items: flex-start;
  }

  .content {
    padding: 4rem;
  }

  .inputWrapper input {
    font-size: 1.15rem;
  }
}


@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo,
  .loading img {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(-360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
