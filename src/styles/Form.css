.header,
.header a {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.code {
  letter-spacing: 0.1em;
  font-weight: 400;
  font-family: var(--font-mono);
}

.form {
  opacity: 0;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  padding-top: 2rem;
  padding: 1rem;
  background-color: rgba(var(--form-bg-rgb), 1);
  border: 1px solid rgba(var(--callout-border-rgb), 0.05);
  border-radius: calc(var(--border-radius) + 1rem);
  box-shadow: 2px 4px 35px 0px oklch(0% 0 0 / 0.102);
}

/* || Grid ---------------------------------------------- */
.FormLayout {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem 0;
}
.FormCheckBoxes {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  width: 50%;
}
.FormCheckBox {
  width: fit-content;
}

.TextInputBox {
  width: 40%;
}

.TwoRadioGroup {
  width: 50%;
  padding-right: 0.5rem;
}

.SliderWrapper {
  max-width: clamp(60%, 1vw, 80%);
  flex-grow: 1;
}

/* ----------------------------------Grid */

.buttonWrapper {
  display: flex;
  align-content: center;
  justify-content: space-between;
}

.resultCard {
  position: relative;
  -webkit-user-select: none;
  user-select: none;
  cursor: pointer;
  height: 4.25rem;
}

.IslandWrapper {
  position: relative;
  margin: 0 auto;
  height: 12.5rem;
}

.FormCheckBox[data-state="hidden"] {
  grid-column: 0;
  visibility: hidden;
}

.TextInputBox[data-state="visible"] {
  padding-left: 1rem;
}

.TextInputBox[data-state="hidden"] {
  grid-column: 0;
  visibility: hidden;
}

.TextInputBox label {
  display: flex;
  flex-direction: column;
  gap: 0.125rem;
}

.TextInputBox input {
  color: rgba(var(--foreground-rgb), 0.87);
}

/* || Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .spin:hover {
    animation: spinAnimation 700ms ease-out;
  }
  .resultCard:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }
  .card:hover h2 {
    color: rgba(var(--foreground-rgb), 0.9);
  }

  @keyframes spinAnimation {
    0% {
      transform: rotate(0);
    }
    40% {
      transform: rotate(340deg);
    }

    60% {
      transform: rotate(380deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  /* scrollbar  on firefox*/
  html,
  .card {
    scrollbar-width: thin;
    /* scrollbar-gutter: stable; */
    scrollbar-color: rgba(var(--foreground-rgb), 0.3) transparent;
  }

  /* this is because the scrollbar height is 9px */
  .card {
    padding: 1.5rem 1.2rem calc(1.5rem - 9px) 1.2rem;
  }

  /* edge, chrome, safari */
  .card::-webkit-scrollbar {
    height: 9px;
  }
  .card::-webkit-scrollbar-thumb {
    background-color: rgba(var(--foreground-rgb), 0.3);
    border-radius: 9px;
  }
}

/* || firefox specific rules  */
@supports (-moz-appearance: none) {
  /* Because firefox does something weird with  the scrollbar*/
  .card {
    padding: 1.5rem 1.2rem 1.5rem 1.2rem;
  }
}

@supports not selector(:has(*)) {
  /* firefox or android do not support :has()  -- so need to override those */
  .inputButton {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
}

@media (prefers-reduced-motion) {
  .inputButton:hover .spin {
    animation: none;
  }
  .loading::before {
    animation: none;
  }

  .card:hover span {
    transform: none;
  }
}

/* || Mobile */
@media (max-width: 700px) {
  .SliderWrapper {
    max-width: 100%;
    flex-grow: 1;
  }

  .TextInputBox {
    width: 100%;
  }

  .TextInputBox[data-state="visible"] {
    padding: 0;
  }

  .header {
    flex-direction: column;
    gap: 3rem;
    align-items: flex-start;
  }

  .inputWrapper input {
    font-size: 1rem;
  }

  .resultCard {
    height: 4.375rem;
  }
}
